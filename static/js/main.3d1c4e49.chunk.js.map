{"version":3,"sources":["images/homeLogo.png","components/Commons/BurgerButton/BurgerButton.tsx","components/Commons/Menu/Menu.tsx","components/Commons/Header/Header.tsx","components/Commons/Footer/Footer.tsx","components/Home/Home.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StyledBurgerButton","styled","button","open","BurgerButton","setOpen","onClick","StyledMenu","nav","Menu","href","StyledHeader","header","Container","div","TranslationButton","Header","useState","isOpen","setIsOpen","StyledFooter","footer","StyledSpan","span","SocialMediaContainer","Link","a","StyledIcon","css","StyledGithubIcon","GithubOutline","StyledTwitterIcon","TwitterOutline","StyledLinkeIndIcon","LinkedinOutline","Footer","target","StyledHome","Paragraph","p","Button","Home","src","HomeLogo","alt","StyledApp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,s4BCa3C,IAAMC,EAAqBC,IAAOC,OAAV,KA6BL,qBAAGC,KACP,gBAAkB,eAIhB,qBAAGA,KAAwC,IAAM,OAC/C,qBAAGA,KACP,mBAAqB,mBAIjB,qBAAGA,KACP,iBAAmB,eAKnB,SAASC,EAAT,GAAmD,IAA3BD,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,QAC3C,OACE,kBAACL,EAAD,CAAoBG,KAAMA,EAAMG,QAAS,kBAAMD,GAASF,KACtD,8BACA,8BACA,+B,yfC7DN,IAAMI,EAAaN,IAAOO,IAAV,KAWD,qBAAGL,KACP,gBAAkB,uBAiBd,SAASM,EAAT,GAAkC,IAAlBN,EAAiB,EAAjBA,KAC7B,OACE,kBAACI,EAAD,CAAYJ,KAAMA,GAChB,uBAAGO,KAAK,SAAR,QACA,uBAAGA,KAAK,UAAR,YACA,uBAAGA,KAAK,WAAR,UACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,YAAR,Y,uoBClCN,IAAMC,EAAeV,IAAOW,OAAV,KASZC,EAAYZ,IAAOa,IAAV,KASTC,EAAoBd,IAAOC,OAAV,KAWR,SAASc,IAAU,IAAD,EACHC,oBAAS,GADN,mBACxBC,EADwB,KAChBC,EADgB,KAG/B,OACE,kBAACR,EAAD,KACE,kBAACE,EAAD,KACE,kBAACT,EAAD,CAAcD,KAAMe,EAAQb,QAASc,IACrC,kBAACV,EAAD,CAAMN,KAAMe,KAEd,kBAACH,EAAD,Y,oqCCrCN,IAAMK,EAAenB,IAAOoB,OAAV,KAMZR,EAAYZ,IAAOa,IAAV,KAaTQ,EAAarB,IAAOsB,KAAV,KAKVC,EAAuBvB,IAAOa,IAAV,KAOpBW,EAAOxB,IAAOyB,EAAV,KAMJC,EAAaC,YAAH,KAOVC,EAAmB5B,YAAO6B,IAAP7B,CAAH,IAClB0B,GAGEI,EAAoB9B,YAAO+B,IAAP/B,CAAH,IACnB0B,GAGEM,EAAqBhC,YAAOiC,IAAPjC,CAAH,IACpB0B,GAGW,SAASQ,IACtB,OACE,kBAACf,EAAD,KACE,kBAAC,EAAD,KACE,kBAACE,EAAD,aACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAMf,KAAK,gCAAgC0B,OAAO,UAChD,kBAACP,EAAD,OAEF,kBAACJ,EAAD,CAAMf,KAAK,kCAAkC0B,OAAO,UAClD,kBAACL,EAAD,OAEF,kBAACN,EAAD,CAAMf,KAAK,uCAAuC0B,OAAO,UACvD,kBAACH,EAAD,U,qxCCvEZ,IAAMI,EAAapC,IAAOa,IAAV,KAwBVD,EAAYZ,IAAOa,IAAV,KAgBTwB,EAAYrC,IAAOsC,EAAV,KAUTC,GAASvC,IAAOC,OAAV,KAgCGuC,OAhBf,WACE,OACE,kBAACJ,EAAD,KACE,kBAAC,EAAD,KACE,4BAAK,iBACL,kBAACC,EAAD,+BACyB,6BADzB,wCAIA,kBAACE,GAAD,oBAEF,yBAAKE,IAAKC,IAAUC,IAAI,gB,mfC3E9B,IAAMC,GAAY5C,IAAOa,IAAV,MAgDAgC,OAxBf,WACE,OACE,kBAACD,GAAD,KACE,kBAAC7B,EAAD,MAeA,kBAAC,GAAD,MACA,kBAACmB,EAAD,QCrCcY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3d1c4e49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homeLogo.c9bd708a.png\";","import React from 'react';\nimport styled from 'styled-components';\n\ntype myProps = {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n};\n\ntype myBurgerButtonProps = {\n    open: boolean;\n    onClick: () => void;\n};\n\nconst StyledBurgerButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  top: 5%;\n  left: 0;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: #CCCCCC;\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }: myBurgerButtonProps) =>\n        open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }: myBurgerButtonProps) => (open ? '0' : '1')};\n      transform: ${({ open }: myBurgerButtonProps) =>\n        open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }: myBurgerButtonProps) =>\n        open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n\nexport default function BurgerButton({ open, setOpen }: myProps) {\n  return (\n    <StyledBurgerButton open={open} onClick={() => setOpen(!open)} >\n      <div />\n      <div />\n      <div />\n    </StyledBurgerButton>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #040404;\n  min-height: 100vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: ${({ open }: myProps) =>\n    open ? 'translateX(0)' : 'translateX(-100%)'};\n  transition: transform 0.4s ease-in-out;\n\n  a {\n    margin: 10px 0;\n    font-size: 34px;\n    color: #FFFFFF;\n    text-decoration: none;\n    text-transform: uppercase;\n    letter-spacing: 0.3rem;\n  }\n`;\n\ntype myProps = {\n  open: boolean;\n};\n\nexport default function Menu({ open }: myProps) {\n  return (\n    <StyledMenu open={open}>\n      <a href=\"/home\">Home</a>\n      <a href=\"/about\">About Me</a>\n      <a href=\"/skilss\">Skills</a>\n      <a href=\"/projects\">Projects</a>\n      <a href=\"/contact\">Contact</a>\n    </StyledMenu>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { BurgerButton } from '../BurgerButton';\nimport { Menu } from '../Menu';\n\nconst StyledHeader = styled.header`\n  grid-area: hd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #040404;\n  height: 70px;\n  width: 100%;\n`;\n\nconst TranslationButton = styled.button`\n  font-size: 17px;\n  color: #cccccc;\n  background: transparent;\n  outline: none;\n  border: none;\n  text-transform: uppercase;\n  cursor: pointer;\n  letter-spacing: 0.1rem;\n`;\n\nexport default function Header() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <StyledHeader>\n      <Container>\n        <BurgerButton open={isOpen} setOpen={setIsOpen} />\n        <Menu open={isOpen} />\n      </Container>\n      <TranslationButton>EN</TranslationButton>\n    </StyledHeader>\n  );\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { GithubOutline } from '@styled-icons/evaicons-outline/GithubOutline';\nimport { TwitterOutline } from '@styled-icons/evaicons-outline/TwitterOutline';\nimport { LinkedinOutline } from '@styled-icons/evaicons-outline/LinkedinOutline';\n\nconst StyledFooter = styled.footer`\n  grid-area: ft;\n  height: 100%;\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #040404;\n  height: 70px;\n  width: 100%;\n  position: relative;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst StyledSpan = styled.span`\n  color: #808080;\n  padding: 0 10px;\n`;\n\nconst SocialMediaContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  margin: 0;\n`;\n\nconst StyledIcon = css`\n  color: #808080;\n  width: 25px;\n  height: 25px;\n  margin: 0 10px;\n`;\n\nconst StyledGithubIcon = styled(GithubOutline)`\n  ${StyledIcon}\n`;\n\nconst StyledTwitterIcon = styled(TwitterOutline)`\n  ${StyledIcon}\n`;\n\nconst StyledLinkeIndIcon = styled(LinkedinOutline)`\n  ${StyledIcon}\n`;\n\nexport default function Footer() {\n  return (\n    <StyledFooter>\n      <Container>\n        <StyledSpan>Home</StyledSpan>\n        <SocialMediaContainer>\n          <Link href=\"https://github.com/davidarce/\" target=\"_blank\">\n            <StyledGithubIcon />\n          </Link>\n          <Link href=\"https://twitter.com/_davidarce/\" target=\"_blank\">\n            <StyledTwitterIcon />\n          </Link>\n          <Link href=\"https://linkedin.com/in/davidarce92/\" target=\"_blank\">\n            <StyledLinkeIndIcon />\n          </Link>\n        </SocialMediaContainer>\n      </Container>\n    </StyledFooter>\n  );\n}\n","import React from 'react';\nimport HomeLogo from '../../images/homeLogo.png';\nimport styled from 'styled-components';\n\nconst StyledHome = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  grid-area: main;\n  padding: 0 20px;\n  background: #040404;\n\n  img {\n    width: 45vmin;\n    height: auto;\n    border-radius: 50%;\n  }\n\n  @media (max-width: 480px) {\n    flex-direction: column;\n    padding: 0 10px;\n\n    img {\n      display: none;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100%;\n\n  h5 {\n    text-transform: uppercase;\n    font-size: 17px;\n    margin-bottom: 20px;\n    font-weight: 400;\n    color: #808080;\n  }\n`;\n\nconst Paragraph = styled.p`\n  margin-bottom: 20px;\n  font-size: 34px;\n  width: 100%;\n\n  @media (max-width: 480px) {\n    font-size: 26px;\n  }\n`;\n\nconst Button = styled.button`\n  font-family: inherit;\n  font-size: 17px;\n  background: #040404;\n  color: #ffffff;\n  text-transform: uppercase;\n  outline: none;\n  border: 1px solid #ffffff;\n  padding: 10px;\n  width: 145px;\n  cursor: pointer;\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nfunction Home() {\n  return (\n    <StyledHome>\n      <Container>\n        <h5>{'<Hello world>'}</h5>\n        <Paragraph>\n          My name is David Arce. <br />\n          I'm Backend Developer from Colombia.\n        </Paragraph>\n        <Button>Contact Me</Button>\n      </Container>\n      <img src={HomeLogo} alt=\"home logo\" />\n    </StyledHome>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Header } from './Commons/Header';\nimport { Footer } from './Commons/Footer';\nimport { Home } from './Home';\n\nconst StyledApp = styled.div`\n  display: grid;\n  grid-template-areas:\n    'hd hd hd hd hd hd'\n    '. main main main main .'\n    'ft ft ft ft ft ft';\n  grid-template-columns: auto repeat(4, 1fr) auto;\n  grid-template-rows: auto 1fr auto;\n  gap: 20px;\n  margin: 0 30px;\n  width: auto;\n  min-height: 100vh;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    margin: 0 20px;\n  }\n\n  @media (max-width: 480px) {\n    margin: 0 12px;\n  }\n\n`;\n\nfunction App() {\n  return (\n    <StyledApp>\n      <Header></Header>\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Home />\n      <Footer />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}